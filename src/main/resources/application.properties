spring.application.name=Mongo DB Example


#Mongo Config
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=logs
spring.data.mongodb.repositories.enabled=true


server.port=8095


spring.jpa.hibernate.ddl-auto=create
spring.datasource.url=jdbc:mysql://dcm.uhcl.edu:3306/caps17g25
spring.datasource.username=caps17g25
spring.datasource.password=7517089
spring.datasource.driverClassName=com.mysql.jdbc.Driver
# ===============================
# = DATA SOURCE
# ===============================


# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = create

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


